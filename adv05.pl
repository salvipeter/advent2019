% -*- mode: prolog -*-

% Memory handling

memory([], _, []).
memory([P|Ps], N, [N-P|Ms]) :- N1 is N + 1, memory(Ps, N1, Ms).

get(N-V, [N-V1|_]) :- !, V = V1.
get(N-V, [N1-_|L]) :- N \= N1, !, get(N-V, L).

parameter(N, M, out, I, V) :-
    !, N1 is N + I,
    parameter(N1, M, 1, V).
parameter(N, M, Mode, I, V) :-
    N1 is N + I,
    ( nth1(I, Mode, PosImm) ; PosImm = 0 ),
    !, parameter(N1, M, PosImm, V).

parameter(N, M, 0, V) :- get(N-I, M), get(I-V, M). % positional
parameter(N, M, 1, V) :- get(N-V, M).              % immediate

% Instructions

add(N, M, Mode, N4, [V3-V|M]) :-
    N4 is N + 4,
    parameter(N, M, Mode, 1, V1),
    parameter(N, M, Mode, 2, V2),
    parameter(N, M, out, 3, V3),
    V is V1 + V2.

mul(N, M, Mode, N4, [V3-V|M]) :-
    N4 is N + 4,
    parameter(N, M, Mode, 1, V1),
    parameter(N, M, Mode, 2, V2),
    parameter(N, M, out, 3, V3),
    V is V1 * V2.

input(N, M, _, N2, [V1-V|M]) :-
    N2 is N + 2,
    parameter(N, M, out, 1, V1),
    read(V).

output(N, M, Mode, N2, M) :-
    N2 is N + 2,
    parameter(N, M, Mode, 1, V),
    write(V), nl.

jump_true(N, M, Mode, N3, M) :-
    parameter(N, M, Mode, 1, 0), !,
    N3 is N + 3.
jump_true(N, M, Mode, V2, M) :-
    parameter(N, M, Mode, 1, V1), V1 =\= 0,
    parameter(N, M, Mode, 2, V2).

jump_false(N, M, Mode, V2, M) :-
    parameter(N, M, Mode, 1, 0), !,
    parameter(N, M, Mode, 2, V2).
jump_false(N, M, Mode, N3, M) :-
    parameter(N, M, Mode, 1, V1), V1 =\= 0,
    N3 is N + 3.

less_than(N, M, Mode, N4, [V3-V|M]) :-
    N4 is N + 4,
    parameter(N, M, Mode, 1, V1),
    parameter(N, M, Mode, 2, V2),
    parameter(N, M, out, 3, V3),
    ( V1 < V2, V = 1 ; V = 0 ).

equals(N, M, Mode, N4, [V3-V|M]) :-
    N4 is N + 4,
    parameter(N, M, Mode, 1, V1),
    parameter(N, M, Mode, 2, V2),
    parameter(N, M, out, 3, V3),
    ( V1 =:= V2, V = 1 ; V = 0 ).

% Virtual machine

digits(N, [N]) :- N < 10, !.
digits(N, [D|L]) :- N >= 10, D is N mod 10, N1 is N // 10, digits(N1, L).

run(N, M) :-
    get(N-I, M),
    ( digits(I, [Op2,Op1|Mode]), Op is Op1 * 10 + Op2
    ; digits(I, [Op|Mode])
    ),
    run(N, M, Op, Mode).

run(_, _, 99, _).
run(N, M, Op, Mode) :-
    nth1(Op, [add, mul, input, output, jump_true, jump_false, less_than, equals], G),
    call(G, N, M, Mode, N1, M1),
    run(N1, M1).

adv05 :- program(P), memory(P, 0, M), run(0, M). % pass 1. for part A, and 5. for part B

% Data

program([3,225,1,225,6,6,1100,1,238,225,104,0,1102,35,92,225,1101,25,55,225,1102,47,36,225,1102,17,35,225,1,165,18,224,1001,224,-106,224,4,224,102,8,223,223,1001,224,3,224,1,223,224,223,1101,68,23,224,101,-91,224,224,4,224,102,8,223,223,101,1,224,224,1,223,224,223,2,217,13,224,1001,224,-1890,224,4,224,102,8,223,223,1001,224,6,224,1,224,223,223,1102,69,77,224,1001,224,-5313,224,4,224,1002,223,8,223,101,2,224,224,1,224,223,223,102,50,22,224,101,-1800,224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,1102,89,32,225,1001,26,60,224,1001,224,-95,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1102,51,79,225,1102,65,30,225,1002,170,86,224,101,-2580,224,224,4,224,102,8,223,223,1001,224,6,224,1,223,224,223,101,39,139,224,1001,224,-128,224,4,224,102,8,223,223,101,3,224,224,1,223,224,223,1102,54,93,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1008,677,677,224,1002,223,2,223,1005,224,329,101,1,223,223,7,677,677,224,102,2,223,223,1006,224,344,101,1,223,223,108,677,677,224,1002,223,2,223,1006,224,359,1001,223,1,223,7,677,226,224,1002,223,2,223,1005,224,374,1001,223,1,223,1107,677,226,224,1002,223,2,223,1005,224,389,1001,223,1,223,107,226,677,224,102,2,223,223,1005,224,404,1001,223,1,223,1108,226,677,224,1002,223,2,223,1006,224,419,101,1,223,223,107,226,226,224,102,2,223,223,1005,224,434,1001,223,1,223,108,677,226,224,1002,223,2,223,1006,224,449,101,1,223,223,108,226,226,224,102,2,223,223,1006,224,464,1001,223,1,223,1007,226,226,224,1002,223,2,223,1005,224,479,101,1,223,223,8,677,226,224,1002,223,2,223,1006,224,494,101,1,223,223,1007,226,677,224,102,2,223,223,1006,224,509,101,1,223,223,7,226,677,224,1002,223,2,223,1005,224,524,101,1,223,223,107,677,677,224,102,2,223,223,1005,224,539,101,1,223,223,1008,677,226,224,1002,223,2,223,1005,224,554,1001,223,1,223,1008,226,226,224,1002,223,2,223,1006,224,569,1001,223,1,223,1108,226,226,224,102,2,223,223,1005,224,584,101,1,223,223,1107,226,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,8,226,677,224,1002,223,2,223,1006,224,614,1001,223,1,223,1108,677,226,224,102,2,223,223,1005,224,629,1001,223,1,223,8,226,226,224,1002,223,2,223,1005,224,644,1001,223,1,223,1107,677,677,224,1002,223,2,223,1005,224,659,1001,223,1,223,1007,677,677,224,1002,223,2,223,1005,224,674,101,1,223,223,4,223,99,226]).
